/* eslint-disable cypress/no-unnecessary-waiting */
/* eslint-disable require-jsdoc */
var Countly = require("../../lib/countly");
var hp = require("../support/helper");

function initMain(deviceId, offline) {
    Countly.init({
        app_key: "YOUR_APP_KEY",
        url: "https://try.count.ly",
        device_id: deviceId,
        tests: true,
        offline_mode: offline
    });
}


describe("Device ID type tests ", () => {
    // 1
    it("Basic init device ID type check", () => {
        hp.haltAndClearStorage(() => {
            initMain(undefined, false);
            // autoGenerated = 1
            expect(Countly.get_device_id_type()).to.equal(1);
        });
    });

    // 2
    it("Basic init with device ID, device ID type check", () => {
        hp.haltAndClearStorage(() => {
            initMain("a", false);
            // userSet = 0
            expect(Countly.get_device_id_type()).to.equal(0);
        });
    });

    // 3
    it("Basic init then enable_offline_mode, device ID type check", () => {
        hp.haltAndClearStorage(() => {
            initMain(undefined, false);
            Countly.enable_offline_mode();
            // tempId = 2
            expect(Countly.get_device_id_type()).to.equal(2);
        });
    });

    // 4
    it("Basic init with device ID then enable_offline_mode, device ID type check", () => {
        hp.haltAndClearStorage(() => {
            initMain("a", false);
            Countly.enable_offline_mode();
            // tempId = 2
            expect(Countly.get_device_id_type()).to.equal(2);
        });
    });


    // 5
    it("Basic init with offline_mode true, device ID type check", () => {
        hp.haltAndClearStorage(() => {
            initMain(undefined, true);
            // tempId = 2
            expect(Countly.get_device_id_type()).to.equal(2);
        });
    });

    // 6
    it("Basic init with device ID and offline_mode true, device ID type check", () => {
        hp.haltAndClearStorage(() => {
            initMain("a", true);
            // tempId = 2
            expect(Countly.get_device_id_type()).to.equal(2);
        });
    });

    // 7
    it("Basic init then change_id, device ID type check", () => {
        hp.haltAndClearStorage(() => {
            initMain(undefined, false);
            Countly.change_id("device_id");
            // userSet = 0
            expect(Countly.get_device_id_type()).to.equal(0);
        });
    });

    // 8
    it("Basic init with device ID then change_id, device ID type check", () => {
        hp.haltAndClearStorage(() => {
            initMain("a", false);
            Countly.change_id("device_id");
            // userSet = 0
            expect(Countly.get_device_id_type()).to.equal(0);
        });
    });

    // 9
    it("Basic init then change_id then enable_offline_mode, device ID type check", () => {
        hp.haltAndClearStorage(() => {
            initMain(undefined, false);
            Countly.change_id("device_id");
            Countly.enable_offline_mode();
            // tempID = 2
            expect(Countly.get_device_id_type()).to.equal(2);
        });
    });

    // 10
    it("Basic init with device ID then change_id then enable_offline_mode, device ID type check", () => {
        hp.haltAndClearStorage(() => {
            initMain("a", false);
            Countly.change_id("device_id");
            Countly.enable_offline_mode();
            // tempID = 2
            expect(Countly.get_device_id_type()).to.equal(2);
        });
    });

    // 11
    it("Basic init then enable_offline_mode then change_id, device ID type check", () => {
        hp.haltAndClearStorage(() => {
            initMain(undefined, false);
            Countly.enable_offline_mode();
            Countly.change_id("device_id");
            // user set = 0 (given during the change_id call)
            expect(Countly.get_device_id_type()).to.equal(0);
        });
    });

    // 12
    it("Basic init with device ID then enable_offline_mode then change_id, device ID type check", () => {
        hp.haltAndClearStorage(() => {
            initMain("a", false);
            Countly.enable_offline_mode();
            Countly.change_id("device_id");
            // user set = 0
            expect(Countly.get_device_id_type()).to.equal(0);
        });
    });

    // 13
    it("Basic init with offline_mode true then change_id, device ID type check", () => {
        hp.haltAndClearStorage(() => {
            initMain(undefined, true);
            Countly.change_id("device_id");
            // user set = 0 (given during the change_id call)
            expect(Countly.get_device_id_type()).to.equal(0);
        });
    });

    // 14
    it("Basic init with device ID and offline_mode true then change_id, device ID type check", () => {
        hp.haltAndClearStorage(() => {
            initMain("a", true);
            Countly.change_id("device_id");
            // user set = 0
            expect(Countly.get_device_id_type()).to.equal(0);
        });
    });
});
